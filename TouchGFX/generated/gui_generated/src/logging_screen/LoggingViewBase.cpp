/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/logging_screen/LoggingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LoggingViewBase::LoggingViewBase() :
    buttonCallback(this, &LoggingViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    btnNextPage.setXY(735, 415);
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
    btnNextPage.setAction(buttonCallback);
    add(btnNextPage);

    btnPrevPage.setXY(17, 415);
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
    btnPrevPage.setAction(buttonCallback);
    add(btnPrevPage);

    logsContainer.setPosition(0, 42, 800, 373);
    logsContainer.enableHorizontalScroll(false);
    logsContainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    logsContainer.setScrollbarsAlpha(255);
    add(logsContainer);

    textArea1.setXY(229, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_83AV));
    add(textArea1);

    levelSelectorsContainer.setPosition(89, 415, 623, 50);
    add(levelSelectorsContainer);

    filterContainerDebug.setPosition(126, 414, 85, 53);
    filterCheckbox.setXY(35, 3);
    filterCheckbox.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_PRESSED_ID));
    filterCheckbox.setSelected(false);
    filterCheckbox.setDeselectionEnabled(true);
    filterContainerDebug.add(filterCheckbox);

    filterName.setXY(4, 6);
    filterName.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    filterName.setLinespacing(0);
    filterName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCLC));
    filterContainerDebug.add(filterName);

    add(filterContainerDebug);

    filterContainerInfo.setPosition(280, 415, 70, 53);
    filterCheckbox_1.setXY(20, 3);
    filterCheckbox_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_PRESSED_ID));
    filterCheckbox_1.setSelected(false);
    filterCheckbox_1.setDeselectionEnabled(true);
    filterContainerInfo.add(filterCheckbox_1);

    filterName_1.setXY(0, 7);
    filterName_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    filterName_1.setLinespacing(0);
    filterName_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9TTD));
    filterContainerInfo.add(filterName_1);

    add(filterContainerInfo);

    filterContainerWarning.setPosition(425, 415, 96, 53);
    filterCheckbox_1_1.setXY(46, 3);
    filterCheckbox_1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_PRESSED_ID));
    filterCheckbox_1_1.setSelected(false);
    filterCheckbox_1_1.setDeselectionEnabled(true);
    filterContainerWarning.add(filterCheckbox_1_1);

    filterName_1_1.setXY(4, 7);
    filterName_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    filterName_1_1.setLinespacing(0);
    filterName_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_72M5));
    filterContainerWarning.add(filterName_1_1);

    add(filterContainerWarning);

    filterContainerError.setPosition(593, 414, 79, 53);
    filterCheckbox_1_2.setXY(29, 3);
    filterCheckbox_1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_PRESSED_ID));
    filterCheckbox_1_2.setSelected(true);
    filterCheckbox_1_2.setDeselectionEnabled(true);
    filterContainerError.add(filterCheckbox_1_2);

    filterName_1_2.setXY(3, 6);
    filterName_1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    filterName_1_2.setLinespacing(0);
    filterName_1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4HJ8));
    filterContainerError.add(filterName_1_2);

    add(filterContainerError);
}

LoggingViewBase::~LoggingViewBase()
{

}

void LoggingViewBase::setupScreen()
{

}

void LoggingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnPrevPage)
    {
        //fromLoggingToCompetitionScreen
        //When btnPrevPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards West
        application().gotoCompetitionScreenScreenSlideTransitionWest();
    }
    if (&src == &btnNextPage)
    {
        //fromLoggingToDriverScreen
        //When btnNextPage clicked change screen to DriverScreen
        //Go to DriverScreen with screen transition towards East
        application().gotoDriverScreenScreenSlideTransitionEast();
    }
}
