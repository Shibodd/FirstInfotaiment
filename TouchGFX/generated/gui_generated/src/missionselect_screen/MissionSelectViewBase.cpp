/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/missionselect_screen/MissionSelectViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MissionSelectViewBase::MissionSelectViewBase() :
    buttonCallback(this, &MissionSelectViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    btnPrevPage.setXY(759, 442);
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_RAW_REMOVEBG_PREVIEW_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_RAW_REMOVEBG_PREVIEW_ID));
    btnPrevPage.setAction(buttonCallback);
    add(btnPrevPage);

    labelSelectMission.setXY(258, 17);
    labelSelectMission.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelSelectMission.setLinespacing(0);
    labelSelectMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2AM));
    add(labelSelectMission);

    btnAccelerationMission.setXY(315, 94);
    btnAccelerationMission.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnAccelerationMission.setLabelText(touchgfx::TypedText(T___SINGLEUSE_32A3));
    btnAccelerationMission.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnAccelerationMission.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnAccelerationMission.setAction(buttonCallback);
    add(btnAccelerationMission);

    btnTrackdriveMission.setXY(315, 171);
    btnTrackdriveMission.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnTrackdriveMission.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9YCJ));
    btnTrackdriveMission.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnTrackdriveMission.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnTrackdriveMission.setAction(buttonCallback);
    add(btnTrackdriveMission);

    btnManualMission.setXY(315, 250);
    btnManualMission.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnManualMission.setLabelText(touchgfx::TypedText(T___SINGLEUSE_WA28));
    btnManualMission.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnManualMission.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnManualMission.setAction(buttonCallback);
    add(btnManualMission);
}

MissionSelectViewBase::~MissionSelectViewBase()
{

}

void MissionSelectViewBase::setupScreen()
{

}

void MissionSelectViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnPrevPage)
    {
        //fromMissionSelectToLiveData
        //When btnPrevPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards West
        application().gotoMainInfotaimentScreenSlideTransitionWest();
    }
    if (&src == &btnManualMission)
    {
        //startManualMission
        //When btnManualMission clicked call virtual function
        //Call startManualMission
        startManualMission();
    }
    if (&src == &btnTrackdriveMission)
    {
        //startTrackdriveMission
        //When btnTrackdriveMission clicked call virtual function
        //Call startTrackdriveMission
        startTrackdriveMission();
    }
    if (&src == &btnAccelerationMission)
    {
        //startAccelerationMission
        //When btnAccelerationMission clicked call virtual function
        //Call startAccelerationMission
        startAccelerationMission();
    }
}
